{"version":3,"sources":["components/utility/FormValidation.js","components/FormErrors.js","components/auth/ForgotPassword.js"],"names":["validateForm","event","state","inputs","document","getElementsByClassName","i","length","classList","contains","remove","hasOwnProperty","username","getElementById","add","blankfield","firstname","lastname","email","verificationcode","password","oldpassword","newpassword","confirmpassword","passwordmatch","FormErrors","props","formerrors","className","apierrors","cognito","message","code","ForgotPassword","useState","setEmail","errors","setErrors","handleSubmit","a","preventDefault","error","Validate","Auth","forgotPassword","history","push","useEffect","ReactGA","pageview","ReactPixel","pageView","auth","user","window","Intercom","app_id","attributes","user_id","name","created_at","Date","now","custom_launcher_selector","onSubmit","e","toLowerCase","label","value","onChange","target","margin","fullWidth","type","variant","color"],"mappings":"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","file":"static/js/10.b790486b.chunk.js","sourcesContent":["function validateForm(event, state) {\n  // clear all error messages\n  const inputs = document.getElementsByClassName(\"is-danger\");\n  for (let i = 0; i < inputs.length; i++) {\n    if (!inputs[i].classList.contains(\"error\")) {\n      inputs[i].classList.remove(\"is-danger\");\n    }\n  }\n\n  if (state.hasOwnProperty(\"username\") && state.username === \"\") {\n    document.getElementById(\"username\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"firstname\") && state.firstname === \"\") {\n    document.getElementById(\"firstname\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"lastname\") && state.lastname === \"\") {\n    document.getElementById(\"lastname\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"email\") && state.email === \"\") {\n    document.getElementById(\"email\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (\n    state.hasOwnProperty(\"verificationcode\") &&\n    state.verificationcode === \"\"\n  ) {\n    document.getElementById(\"verificationcode\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"password\") && state.password === \"\") {\n    document.getElementById(\"password\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"oldpassword\") && state.oldpassword === \"\") {\n    document.getElementById(\"oldpassword\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"newpassword\") && state.newpassword === \"\") {\n    document.getElementById(\"newpassword\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"confirmpassword\") && state.confirmpassword === \"\") {\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (\n    state.hasOwnProperty(\"password\") &&\n    state.hasOwnProperty(\"confirmpassword\") &&\n    state.password !== state.confirmpassword\n  ) {\n    document.getElementById(\"password\").classList.add(\"is-danger\");\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\n    return { passwordmatch: true };\n  }\n  if (\n    state.hasOwnProperty(\"newpassword\") &&\n    state.hasOwnProperty(\"confirmpassword\") &&\n    state.newpassword !== state.confirmpassword\n  ) {\n    document.getElementById(\"newpassword\").classList.add(\"is-danger\");\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\n    return { passwordmatch: true };\n  }\n  return;\n}\n\nexport default validateForm;\n","import React from 'react';\n\nfunction FormErrors(props) {\n    if (props.formerrors && (props.formerrors.blankfield || props.formerrors.passwordmatch)) {\n        return (\n            <div className=\"error container help is-danger\">\n                <div className=\"row justify-content-center\">\n                    {props.formerrors.passwordmatch ? 'Password value does not match confirm password value' : ''}\n                </div>\n                <div className=\"row justify-content-center help is-danger\">{props.formerrors.blankfield ? 'All fields are required' : ''}</div>\n            </div>\n        );\n    } else if (props.apierrors) {\n        return (\n            <div className=\"error container help is-danger\">\n                <div className=\"row justify-content-center\">{props.apierrors}</div>\n            </div>\n        );\n    } else if (props.formerrors && props.formerrors.cognito) {\n        return (\n            <div className=\"error container help is-danger\">\n                <div className=\"row justify-content-center\">{props.formerrors.cognito.message}</div>\n            </div>\n        );\n    } else if (props.formerrors && props.formerrors.code) {\n        return (\n            <div className=\"error container help is-danger\">\n                <div className=\"row justify-content-center\">{props.formerrors.message}</div>\n            </div>\n        );\n    } else {\n        return <div />;\n    }\n}\n\nexport default FormErrors;\n","import React, { useState, useEffect } from 'react';\nimport Validate from \"../utility/FormValidation\";\nimport { Auth } from 'aws-amplify';\nimport FormErrors from \"../FormErrors\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ReactGA from 'react-ga';\nimport ReactPixel from 'react-facebook-pixel';\n\n\nfunction ForgotPassword(props) {\n\n\n    const [ email, setEmail ] = useState('');\n    const [ errors,setErrors ] = useState({\n            cognito:null,\n            blankfield:false\n        });\n\n        const clearErrorState = (errors) => {\n\n          setErrors({\n              cognito: null,\n              blankfield: false\n          })\n      \n      \n        };\n      \n      \n        const handleSubmit = async (event,state) => {\n            event.preventDefault();\n            // Form validation\n            clearErrorState();\n            const error = Validate(event, state);\n            if (error) {\n\n                setErrors({ ...state.errors, ...error })\n            }\n        \n            // AWS Cognito integration here\n            try {\n              await Auth.forgotPassword(state.email);\n              props.history.push('/forgotpasswordverification');\n            } catch(error) {\n              //console.log(error); \n            }\n          }\n    \n          const componentDidMount = () => {\n            //console.log(this.props.auth);\n            ReactGA.pageview('/forgotpassword')\n            ReactPixel.pageView('/forgotpassword')\n            if (props.auth.user) {\n                window.Intercom('boot', {\n                   app_id: 's67jlgg6',\n                   email: props.auth.user.attributes.email,\n                   user_id: props.auth.user.username,\n                   name: props.auth.user.attributes.name,\n                   created_at: Date.now(),\n                   custom_launcher_selector: '#my_custom_link' \n                });\n            } else {\n                window.Intercom('boot', {app_id: 's67jlgg6'});\n            }\n        }\n      \n        const componentWillUnmount = () => {\n            window.Intercom('shutdown');\n        }\n      \n        useEffect(() => {\n          //console.log(\"use effect\");\n          componentDidMount();\n        });\n\n    \n   \n    \n  return (\n    <div>\n      <div className=\"form-container\">\n        <h1>Forgot Your Password?</h1>\n        <p>Please enter the email address associated with your account and we'll email you a password reset link.</p>\n        <FormErrors formerrors={errors} />\n        <form onSubmit={ e => {\n               \n\n                handleSubmit(e,{email:email.toLowerCase(),errors:errors})\n            \n            }}>\n\n            <TextField\n              label=\"Email\"\n              value={email}\n              onChange={e => setEmail(e.target.value)}\n              margin=\"normal\"\n              fullWidth\n            />       \n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" className=\"login-page-btn\">Submit</Button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default ForgotPassword;\n"],"sourceRoot":""}