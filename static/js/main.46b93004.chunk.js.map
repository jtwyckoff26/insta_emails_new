{"version":3,"sources":["components/ExportExcel.js","components/LoadingSpinner.js","components/MainUsers.js","components/MainTags.js","components/Home.js","App.js","serviceWorker.js","index.js","components/loading.gif"],"names":["ExportCSV","csvData","fileName","Button","variant","onClick","e","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","type","data","Blob","FileSaver","exportToCSV","LoadingSpinner","styled","img","src","LoadingGif","MainUsers","handleNameChange","evt","setState","name","target","value","handleShareholderNameChange","idx","newShareholders","state","shareholders","map","shareholder","sidx","handleSubmit","a","sub_status","body","Object","keys","key","filter","obj","console","log","axios","post","usernames","headers","Accept","then","response","JSON","parse","length","createData","number_row","original_poster","username","category","business","email","phone","data_rows","i","String","push","data_rows2","isLoading","catch","error","alert","handleSubmit_file","website","handleAddShareholder","concat","handleRemoveShareholder","s","handleFiles","files","listy","reader","FileReader","onload","result","readAsText","this","basename","to","onSubmit","className","placeholder","onChange","style","display","onFileLoaded","fileInfo","disabled","overflowX","Paper","width","Table","overflow","stickyHeader","aria-label","TableHead","TableRow","TableCell","align","TableBody","height","component","scope","row","React","Component","rootElement","document","getElementById","ReactDOM","render","MainTags","tags","Home","App","exact","path","props","Boolean","window","location","hostname","match","StrictMode","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.46b93004.chunk.js","sourcesContent":["import React from 'react'\nimport Button from 'react-bootstrap/Button';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\n\nexport const ExportCSV = ({csvData, fileName}) => {\n\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n    const fileExtension = '.xlsx';\n\n    const exportToCSV = (csvData, fileName) => {\n        const ws = XLSX.utils.json_to_sheet(csvData);\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], {type: fileType});\n        FileSaver.saveAs(data, fileName + fileExtension);\n    }\n\n    return (\n        <Button variant=\"warning\" onClick={(e) => exportToCSV(csvData,fileName)}>Export</Button>\n    )\n}\n\nexport default ExportCSV;","import React from \"react\";\nimport styled from \"styled-components\";\nimport LoadingGif from \"./loading.gif\";\n\nconst LoadingSpinner = styled.img`\n  display: block;\n  margin: 0 auto;\n  width: 100px;\n`;\n\nexport default () => {\n  return <LoadingSpinner src={LoadingGif} />;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport ReactFileReader from 'react-file-reader';\nimport ExportCSV from './ExportExcel';\nimport CSVReader from 'react-csv-reader'\nimport LoadingSpinner from './LoadingSpinner';\nimport { HashRouter, Route, Link } from \"react-router-dom\";\n\nimport \"./style.css\";\n\nclass MainUsers extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      shareholders: [{ name: \"\" }],\n      isLoading: false,\n      data_rows2: [],\n      sub_status: \"None\"\n    };\n  }\n\n  handleNameChange = evt => {\n    this.setState({ name: evt.target.value });\n  };\n\n  handleShareholderNameChange = idx => evt => {\n    const newShareholders = this.state.shareholders.map((shareholder, sidx) => {\n      if (idx !== sidx) return shareholder;\n      return { ...shareholder, name: evt.target.value };\n    });\n\n    this.setState({ shareholders: newShareholders });\n  };\n\n  handleSubmit = async () => {\n    this.setState({ sub_status: \"Loading\" });\n    const { shareholders } = this.state;\n    var body = Object.keys(shareholders).map(function(key){\n      if (shareholders[key][\"name\"] === \"\") {\n        return null\n      }\n      else {\n        return shareholders[key][\"name\"];\n      }\n    });\n\n    body = body.filter(function(obj) { return obj });\n\n    console.log(\"Shares: \",shareholders);\n    console.log(\"Body: \",body);\n    axios\n      .post(\n        `https://vjj7x36vf1.execute-api.us-east-1.amazonaws.com/dev`,\n        {\n          usernames: body\n        },\n        {\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            //'Content-Type': 'application/json',\n            Accept: '*/*',\n          },\n        },\n      )\n      .then(async (response) => {\n        const data = JSON.parse(response.data.body)\n        console.log(\"Length: \",data.length)\n        console.log(\"Item1: \",data[0])\n          //console.log(\"data :\",itemList);\n          //setLoading('false');\n          const createData = (number_row,original_poster,username,category,business,email,phone) => {\n            return { number_row, original_poster,username,category,business,email,phone};\n          }\n          \n          const data_rows = [];\n          //console.log(\"Res DAta: \",res.data);\n          var i;\n          for (i=0;i<data.length;i++) {\n          //res.data.forEach(async (item, i) => {\n              data_rows.push(await createData(\n                          String(i+1),\n                          data[i].original_poster,\n                          data[i].username,\n                          data[i].category,\n                          data[i].business,\n                          data[i].email,\n                          data[i].phone\n                          ));\n          };\n          //console.log(\"Data Rows before: \",data_rows)\n          this.setState({ data_rows2: data_rows });\n          this.setState({ sub_status: \"Done\" });\n          this.setState({ isLoading: false });\n          console.log(\"Data_rows: \",this.state.data_rows2)\n      }\n  )     \n      .catch(function (error) {\n        alert('Something went wrong! Please contact Admin@fraction.rent for help.');\n      });\n  };\n\n  handleSubmit_file = async (data) => {\n    this.setState({ isLoading: true });\n    this.setState({ sub_status: \"Loading\" });\n\n    var body = []\n    for (var i = 0; i < data.length; i++) {\n      body.push(data[i][0])\n    }\n\n    console.log(\"Body: \",body);\n    axios\n      .post(\n        `https://vjj7x36vf1.execute-api.us-east-1.amazonaws.com/dev`,\n        {\n          usernames: body\n        },\n        {\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            //'Content-Type': 'application/json',\n            Accept: '*/*',\n          },\n        },\n      )\n      .then(async (response) => {\n        const data = JSON.parse(response.data.body)\n        console.log(\"Length: \",data.length)\n        console.log(\"Item1: \",data[0])\n          //console.log(\"data :\",itemList);\n          //setLoading('false');\n          const createData = (number_row,original_poster,username,category,business,website,email,phone) => {\n            return { number_row, original_poster,username,category,business,website,email,phone};\n          }\n          \n          const data_rows = [];\n          //console.log(\"Res DAta: \",res.data);\n          var i;\n          for (i=0;i<data.length;i++) {\n          //res.data.forEach(async (item, i) => {\n              data_rows.push(await createData(\n                          String(i+1),\n                          data[i].original_poster,\n                          data[i].username,\n                          data[i].category,\n                          data[i].business,\n                          data[i].website,\n                          data[i].email,\n                          data[i].phone\n                          ));\n          };\n          //console.log(\"Data Rows before: \",data_rows)\n          this.setState({ data_rows2: data_rows });\n          this.setState({ sub_status: \"Done\" });\n          this.setState({ isLoading: false });\n          console.log(\"Data_rows: \",this.state.data_rows2)\n      }\n  )     \n      .catch(function (error) {\n        alert('Something went wrong! Please contact Admin@fraction.rent for help.');\n      });\n  };\n\n  handleAddShareholder = () => {\n    this.setState({\n      shareholders: this.state.shareholders.concat([{ name: \"\" }])\n    });\n  };\n\n  handleRemoveShareholder = idx => () => {\n    this.setState({\n      shareholders: this.state.shareholders.filter((s, sidx) => idx !== sidx)\n    });\n  };\n\n  handleFiles = files => {\n    var listy = [];\n    var reader = new FileReader();\n    reader.onload = function(e) {\n        // Use reader.result\n        listy.push(reader.result)\n        console.log(\"Reader: \",reader)\n    }\n    reader.readAsText(files[0]);\n    this.setState({ data_rows2: listy });\n    console.log(\"Reader: \",this.state.data_rows2)\n  };\n\n  render() {\n    const { isLoading,data_rows2,sub_status } = this.state;\n\n    return (\n      <div>\n        <HashRouter basename=\"/\">\n        <div>\n          <ul>\n            <li><Link to=\"/\">Home</Link></li>\n            <li><Link to=\"/users\">Username Search</Link></li>\n            <li><Link to=\"/tags\">Hashtag Search</Link></li>\n          </ul>\n          <hr />\n        </div>\n      </HashRouter>\n      <form onSubmit={this.handleSubmit}>\n        <h4>Accounts (without @)</h4>\n\n        {this.state.shareholders.map((shareholder, idx) => (\n          <div className=\"shareholder\">\n            <input\n              type=\"text\"\n              placeholder={`Account #${idx + 1} name`}\n              value={shareholder.name}\n              onChange={this.handleShareholderNameChange(idx)}\n            />\n            <button\n              type=\"button\"\n              onClick={this.handleRemoveShareholder(idx)}\n              className=\"small\"\n            >\n              -\n            </button>\n          </div>\n        ))}\n        <div style={{display:'inline-block'}}>\n        <button\n          type=\"button\"\n          onClick={this.handleAddShareholder}\n          className=\"small\"\n        >\n          Add Account\n        </button>\n        <div>\n          <CSVReader onFileLoaded={(data, fileInfo) => this.handleSubmit_file(data)} />\n        </div>\n        </div>\n        {sub_status === \"Loading\" ? (\n          <button disabled={true}>\n            Loading Content\n          </button>          \n        ) : (\n          <button>Submit</button>\n        )}\n      </form>\n      <br/>\n      <div style={{ overflowX: \"auto\" }}>\n      <Paper style={{width:\"100%\"}}>\n        <Table style={{ \"maxHeight\": 440, overflow: 'auto',}} stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"left\">#</TableCell>\n              <TableCell align=\"left\">Original</TableCell>\n              <TableCell align=\"left\">Username</TableCell>\n              <TableCell align=\"left\">Category</TableCell>\n              <TableCell align=\"left\">Business?</TableCell>\n              <TableCell align=\"left\">Email</TableCell>\n              <TableCell align=\"left\">Phone</TableCell>\n            </TableRow>\n          </TableHead>\n          {sub_status === \"None\" ? (\n            <TableBody>\n            <TableRow key={1} variant=\"body\" style={{ height: 48 }}>\n              <TableCell component=\"th\" scope=\"row\">\n                  {1}\n                </TableCell>\n                <TableCell align=\"left\"></TableCell>\n                <TableCell align=\"left\"></TableCell>\n                <TableCell align=\"left\"></TableCell>\n                <TableCell align=\"left\"></TableCell>\n                <TableCell align=\"left\"></TableCell>\n                <TableCell align=\"left\"></TableCell>\n              </TableRow>\n            </TableBody>\n          ) : (\n          sub_status === \"Loading\" ? \n            <TableBody>\n              <TableRow key={1} variant=\"body\" style={{ height: 48 }}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {1}\n                </TableCell>\n                <TableCell align=\"left\"><LoadingSpinner/></TableCell>\n                <TableCell align=\"left\"><LoadingSpinner/></TableCell>\n                <TableCell align=\"left\"><LoadingSpinner/></TableCell>\n                <TableCell align=\"left\"><LoadingSpinner/></TableCell>\n                <TableCell align=\"left\"><LoadingSpinner/></TableCell>\n                <TableCell align=\"left\"><LoadingSpinner/></TableCell>\n              </TableRow>\n            </TableBody>\n           : \n          <TableBody>\n            {data_rows2.map(row => (\n              \n              <TableRow key={row.number_row} variant=\"body\" style={{ height: 48 }}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.number_row}\n                </TableCell>\n                <TableCell align=\"left\">{row.original_poster}</TableCell>\n                <TableCell align=\"left\">{row.username}</TableCell>\n                <TableCell align=\"left\">{row.category}</TableCell>\n                <TableCell align=\"left\">{row.business}</TableCell>\n                <TableCell align=\"left\">{row.email}</TableCell>\n                <TableCell align=\"left\">{row.phone}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n          )}\n        </Table>\n      </Paper>\n      </div>\n      <br/>\n      <div>\n      <ExportCSV csvData={data_rows2} fileName={\"test_export_main\"} />\n      </div>\n      </div>\n\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<MainUsers />, rootElement);\n\nexport default MainUsers;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport ReactFileReader from 'react-file-reader';\nimport ExportCSV from './ExportExcel';\nimport CSVReader from 'react-csv-reader'\nimport LoadingSpinner from './LoadingSpinner';\nimport { HashRouter, Route, Link } from \"react-router-dom\";\n\nimport \"./style.css\";\n\nclass MainTags extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      shareholders: [{ name: \"\" }],\n      isLoading: false,\n      data_rows2: [],\n      sub_status: \"None\"\n    };\n  }\n\n  handleNameChange = evt => {\n    this.setState({ name: evt.target.value });\n  };\n\n  handleShareholderNameChange = idx => evt => {\n    const newShareholders = this.state.shareholders.map((shareholder, sidx) => {\n      if (idx !== sidx) return shareholder;\n      return { ...shareholder, name: evt.target.value };\n    });\n\n    this.setState({ shareholders: newShareholders });\n  };\n\n  handleSubmit = async () => {\n    this.setState({ sub_status: \"Loading\" });\n    const { shareholders } = this.state;\n    var body = Object.keys(shareholders).map(function(key){\n      if (shareholders[key][\"name\"] === \"\") {\n        return null\n      }\n      else {\n        return shareholders[key][\"name\"];\n      }\n    });\n\n    body = body.filter(function(obj) { return obj });\n\n    console.log(\"Shares: \",shareholders);\n    console.log(\"Body: \",body);\n    axios\n      .post(\n        `https://7iwelj9z36.execute-api.us-east-1.amazonaws.com/dev`,\n        {\n          tags: body\n        },\n        {\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            //'Content-Type': 'application/json',\n            Accept: '*/*',\n          },\n        },\n      )\n      .then(async (response) => {\n        const data = JSON.parse(response.data.body)\n        console.log(\"Length: \",data.length)\n        console.log(\"Item1: \",data[0])\n          //console.log(\"data :\",itemList);\n          //setLoading('false');\n          const createData = (number_row,original_poster,username,category,business,email,phone) => {\n            return { number_row, original_poster,username,category,business,email,phone};\n          }\n          \n          const data_rows = [];\n          //console.log(\"Res DAta: \",res.data);\n          var i;\n          for (i=0;i<data.length;i++) {\n          //res.data.forEach(async (item, i) => {\n              data_rows.push(await createData(\n                          String(i+1),\n                          data[i].original_poster,\n                          data[i].username,\n                          data[i].category,\n                          data[i].business,\n                          data[i].email,\n                          data[i].phone\n                          ));\n          };\n          //console.log(\"Data Rows before: \",data_rows)\n          this.setState({ data_rows2: data_rows });\n          this.setState({ sub_status: \"Done\" });\n          this.setState({ isLoading: false });\n          console.log(\"Data_rows: \",this.state.data_rows2)\n      }\n  )     \n      .catch(function (error) {\n        this.setState({ sub_status: \"None\" });\n        alert('Something went wrong! Please contact Admin@fraction.rent for help.');\n      });\n  };\n\n  handleSubmit_file = async (data) => {\n    this.setState({ isLoading: true });\n    this.setState({ sub_status: \"Loading\" });\n\n    var body = []\n    for (var i = 0; i < data.length; i++) {\n      body.push(data[i][0])\n    }\n\n    console.log(\"Body: \",body);\n    axios\n      .post(\n        `https://7iwelj9z36.execute-api.us-east-1.amazonaws.com/dev`,\n        {\n          tags: body\n        },\n        {\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            //'Content-Type': 'application/json',\n            Accept: '*/*',\n          },\n        },\n      )\n      .then(async (response) => {\n        const data = JSON.parse(response.data.body)\n        console.log(\"Length: \",data.length)\n        console.log(\"Item1: \",data[0])\n          //console.log(\"data :\",itemList);\n          //setLoading('false');\n          const createData = (number_row,original_poster,username,category,business,website,email,phone) => {\n            return { number_row, original_poster,username,category,business,website,email,phone};\n          }\n          \n          const data_rows = [];\n          //console.log(\"Res DAta: \",res.data);\n          var i;\n          for (i=0;i<data.length;i++) {\n          //res.data.forEach(async (item, i) => {\n              data_rows.push(await createData(\n                          String(i+1),\n                          data[i].original_poster,\n                          data[i].username,\n                          data[i].category,\n                          data[i].business,\n                          data[i].website,\n                          data[i].email,\n                          data[i].phone\n                          ));\n          };\n          //console.log(\"Data Rows before: \",data_rows)\n          this.setState({ data_rows2: data_rows });\n          this.setState({ sub_status: \"Done\" });\n          this.setState({ isLoading: false });\n          console.log(\"Data_rows: \",this.state.data_rows2)\n      }\n  )     \n      .catch(function (error) {\n        this.setState({ sub_status: \"None\" });\n        alert('Something went wrong! Please contact Admin@fraction.rent for help.');\n      });\n  };\n\n  handleAddShareholder = () => {\n    this.setState({\n      shareholders: this.state.shareholders.concat([{ name: \"\" }])\n    });\n  };\n\n  handleRemoveShareholder = idx => () => {\n    this.setState({\n      shareholders: this.state.shareholders.filter((s, sidx) => idx !== sidx)\n    });\n  };\n\n  handleFiles = files => {\n    var listy = [];\n    var reader = new FileReader();\n    reader.onload = function(e) {\n        // Use reader.result\n        listy.push(reader.result)\n        console.log(\"Reader: \",reader)\n    }\n    reader.readAsText(files[0]);\n    this.setState({ data_rows2: listy });\n    console.log(\"Reader: \",this.state.data_rows2)\n  };\n\n  render() {\n    const { isLoading,data_rows2,sub_status } = this.state;\n\n    return (\n      <div>\n        <HashRouter basename=\"/\">\n        <div>\n          <ul>\n            <li><Link to=\"/\">Home</Link></li>\n            <li><Link to=\"/users\">Username Search</Link></li>\n            <li><Link to=\"/tags\">Hashtag Search</Link></li>\n          </ul>\n          <hr />\n        </div>\n      </HashRouter>\n      <form onSubmit={this.handleSubmit}>\n        <h4>Hashtags (without #)</h4>\n\n        {this.state.shareholders.map((shareholder, idx) => (\n          <div className=\"shareholder\">\n            <input\n              type=\"text\"\n              placeholder={`Hashtag #${idx + 1} name`}\n              value={shareholder.name}\n              onChange={this.handleShareholderNameChange(idx)}\n            />\n            <button\n              type=\"button\"\n              onClick={this.handleRemoveShareholder(idx)}\n              className=\"small\"\n            >\n              -\n            </button>\n          </div>\n        ))}\n        <div style={{display:'inline-block'}}>\n        <button\n          type=\"button\"\n          onClick={this.handleAddShareholder}\n          className=\"small\"\n        >\n          Add Hashtag\n        </button>\n        <div>\n          <CSVReader onFileLoaded={(data, fileInfo) => this.handleSubmit_file(data)} />\n        </div>\n        </div>\n        {sub_status === \"Loading\" ? (\n          <button disabled={true}>\n            Loading Content\n          </button>          \n        ) : (\n          <button>Submit</button>\n        )}\n      </form>\n      <br/>\n      <div style={{ overflowX: \"auto\" }}>\n      <Paper style={{width:\"100%\"}}>\n        <Table style={{ \"maxHeight\": 440, overflow: 'auto',}} stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"left\">#</TableCell>\n              <TableCell align=\"left\">Original</TableCell>\n              <TableCell align=\"left\">Username</TableCell>\n              <TableCell align=\"left\">Category</TableCell>\n              <TableCell align=\"left\">Business?</TableCell>\n              <TableCell align=\"left\">Email</TableCell>\n              <TableCell align=\"left\">Phone</TableCell>\n            </TableRow>\n          </TableHead>\n          {sub_status === \"None\" ? (\n            <TableBody>\n            <TableRow key={1} variant=\"body\" style={{ height: 48 }}>\n              <TableCell component=\"th\" scope=\"row\">\n                  {1}\n                </TableCell>\n                <TableCell align=\"left\"></TableCell>\n                <TableCell align=\"left\"></TableCell>\n                <TableCell align=\"left\"></TableCell>\n                <TableCell align=\"left\"></TableCell>\n                <TableCell align=\"left\"></TableCell>\n                <TableCell align=\"left\"></TableCell>\n              </TableRow>\n            </TableBody>\n          ) : (\n          sub_status === \"Loading\" ? \n            <TableBody>\n              <TableRow key={1} variant=\"body\" style={{ height: 48 }}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {1}\n                </TableCell>\n                <TableCell align=\"left\"><LoadingSpinner/></TableCell>\n                <TableCell align=\"left\"><LoadingSpinner/></TableCell>\n                <TableCell align=\"left\"><LoadingSpinner/></TableCell>\n                <TableCell align=\"left\"><LoadingSpinner/></TableCell>\n                <TableCell align=\"left\"><LoadingSpinner/></TableCell>\n                <TableCell align=\"left\"><LoadingSpinner/></TableCell>\n              </TableRow>\n            </TableBody>\n           : \n          <TableBody>\n            {data_rows2.map(row => (\n              \n              <TableRow key={row.number_row} variant=\"body\" style={{ height: 48 }}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.number_row}\n                </TableCell>\n                <TableCell align=\"left\">{row.original_poster}</TableCell>\n                <TableCell align=\"left\">{row.username}</TableCell>\n                <TableCell align=\"left\">{row.category}</TableCell>\n                <TableCell align=\"left\">{row.business}</TableCell>\n                <TableCell align=\"left\">{row.email}</TableCell>\n                <TableCell align=\"left\">{row.phone}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n          )}\n        </Table>\n      </Paper>\n      </div>\n      <br/>\n      <div>\n      <ExportCSV csvData={data_rows2} fileName={\"test_export_main\"} />\n      </div>\n      </div>\n\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<MainTags />, rootElement);\n\nexport default MainTags;","import React, { Component } from 'react';\nimport { HashRouter, Route, Link } from \"react-router-dom\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <HashRouter basename=\"/\">\n        <div>\n          <ul>\n            <li><Link to=\"/\">Home</Link></li>\n            <li><Link to=\"/users\">Username Search</Link></li>\n            <li><Link to=\"/tags\">Hashtag Search</Link></li>\n          </ul>\n          <hr />\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default Home;","import './App.css';\nimport React from 'react';\nimport { HashRouter, Route } from \"react-router-dom\";\nimport MainUsers from './components/MainUsers';\nimport MainTags from './components/MainTags';\nimport Home from './components/Home';\n\n    function App() {\n        return (\n            <HashRouter basename=\"/\">\n                <div>\n                    <Route exact path=\"/\" render={props => <Home {...props} />} /> \n                    <Route exact path=\"/users\" render={props => <MainUsers {...props} />} /> \n                    <Route exact path=\"/tags\" render={props => <MainTags {...props} />} />\n                </div>\n            </HashRouter>\n        );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/loading.8c328009.gif\";"],"sourceRoot":""}