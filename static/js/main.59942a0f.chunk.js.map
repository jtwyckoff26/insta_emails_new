{"version":3,"sources":["App.js","serviceWorker.js","reducers/rootReducer.js","reducers/itemReducer.js","index.js","store.js","components/LoadingSpinner.js","components/loading.gif"],"names":["Amplify","configure","Auth","mandatorySignId","region","config","cognito","REGION","userPoolId","USER_POOL_ID","userPoolWebClientId","APP_CLIENT_ID","ReactGA","initialize","debug","titleCase","window","performance","timeSincePageLoad","Math","round","now","timing","category","variable","value","label","ReactPixel","init","autoConfig","Home","lazy","MainUsers","MainTags","Login","Register","ChangePassword","ChangePasswordConfirm","ForgotPasswordVerification","ForgotPassword","App","state","isAuthenticated","isAuthenticating","user","setAuthStatus","authenticated","setState","setUser","currentSession","this","currentAuthenticatedUser","set","userId","attributes","email","toLowerCase","authProps","console","log","PrivateRoute","Component","component","rest","render","withRouter","props","auth","to","basename","fallback","style","LoadingSpinner","exact","path","Boolean","location","hostname","match","combineReducers","itemReducer","action","type","Object","assign","items","timeout","ReactDOM","store","initialState","createStore","rootReducer","applyMiddleware","thunk","configureStore","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","styled","img","src","LoadingGif","module","exports"],"mappings":"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","file":"static/js/main.59942a0f.chunk.js","sourcesContent":["import React, { Component, lazy, Suspense } from 'react';\nimport './css/App.css';\nimport { BrowserRouter as Router, Route, Switch, withRouter, Redirect } from \"react-router-dom\";\nimport LoadingSpinner from './components/LoadingSpinner.js';\nimport { Auth } from 'aws-amplify';\nimport Amplify from 'aws-amplify';\nimport config from './config';\nimport ReactGA from 'react-ga';\nimport ReactPixel from 'react-facebook-pixel';\n\n\n\nAmplify.configure({\n    Auth: {\n        mandatorySignId: true,\n        region: config.cognito.REGION,\n        userPoolId: config.cognito.USER_POOL_ID,\n        //identityPoolId: config.cognito.IDENTITY_POOL_ID,\n        userPoolWebClientId: config.cognito.APP_CLIENT_ID,\n    },\n});\n\nReactGA.initialize('UA-149877166-1', {\n    debug: false,\n    titleCase: false,\n});\n\nif (window.performance) {\n    // Gets the number of milliseconds since page load\n    // (and rounds the result since the value must be an integer).\n    var timeSincePageLoad = Math.round(performance.now());\n    //console.log(\"Page Load: \", timeSincePageLoad)\n\n    // Sends the timing hit to Google Analytics.\n    ReactGA.timing({\n        category: 'JS Libraries',\n        variable: 'load',\n        value: timeSincePageLoad, // in milliseconds\n        label: 'CDN libs'\n    });\n}\n//ReactGA.pageview(window.location.pathname + window.location.search);\n\nconst advancedMatching = { em: 'some@email.com' }; // optional, more info: https://developers.facebook.com/docs/facebook-pixel/pixel-with-ads/conversion-tracking#advanced_match\nconst options = {\n    autoConfig: true, \t// set pixel's autoConfig\n    debug: false, \t\t// enable logs\n};\nReactPixel.init('702013887004733', options);\n//ReactPixel.pageView(); \t\n\nconst Home = lazy(() => import('./components/Home'));\nconst MainUsers = lazy(() => import('./components/MainUsers'));\nconst MainTags = lazy(() => import('./components/MainTags'));\nconst Login = lazy(() => import('./components/auth/Login'));\nconst Register = lazy(() => import('./components/auth/Register'));\nconst ChangePassword = lazy(() => import('./components/auth/ChangePassword'));\nconst ChangePasswordConfirm = lazy(() => import('./components/auth/ChangePasswordConfirm'));\nconst ForgotPasswordVerification = lazy(() => import('./components/auth/ForgotPasswordVerification'));\nconst ForgotPassword = lazy(() => import('./components/auth/ForgotPassword'));\n\nclass App extends Component {\n    state = {\n        isAuthenticated: false,\n        isAuthenticating: true,\n        user: null,\n    };\n\n    setAuthStatus = authenticated => {\n        this.setState({ isAuthenticated: authenticated });\n    };\n\n    setUser = user => {\n        //console.log(\"Auth: \",Auth)\n        this.setState({ user: user });\n    };\n\n    async componentDidMount() {\n        try {\n            const session = await Auth.currentSession();\n            this.setAuthStatus(true);\n            //console.log(\"App.js Session: \",session);\n            const user = await Auth.currentAuthenticatedUser();\n            this.setUser(user);\n            \n            ReactGA.set({ userId: user.attributes.email.toLowerCase() });\n            //console.log(\"App.js user:\", user.attributes.email);\n        } catch (error) {\n            //console.log(\"No current user\");\n        }\n        this.setState({ isAuthenticating: false });\n        // Feature detects Navigation Timing API support.\n\n    }\n\n\n    render() {\n        //console.log('Rerender app');\n        const authProps = {\n            isAuthenticated: this.state.isAuthenticated,\n            user: this.state.user,\n            setAuthStatus: this.setAuthStatus,\n            setUser: this.setUser,\n        };\n        {console.log(authProps)}\n        \n        const PrivateRoute = ({ component: Component, ...rest }) => (\n          <Route {...rest} render={withRouter((props) => (\n            authProps.isAuthenticated === true\n              ? <Component {...props} auth={authProps}/>\n              : <Redirect to='/login' />\n          ))} />\n        )\n\n        return (\n          !this.state.isAuthenticating && (\n            <div>\n                    <Router basename={\"/insta_emails_new\"}>\n                      <Switch>\n                        <Suspense fallback={<div style={{'display':'flex','justifyContent':'center','alignItems':'center','height':'100vh'}}><LoadingSpinner /></div>}>\n                        <Route exact path=\"/\" render={withRouter(props => <Home {...props} auth={authProps} />)} />\n                        <Route exact path=\"/login\" render={props => <Login {...props} auth={authProps} />} />\n                        <Route exact path=\"/register\" render={props => <Register {...props} auth={authProps} />} />\n                        <Route exact path=\"/forgotpassword\" render={props => <ForgotPassword {...props} auth={authProps} />} />\n                        <Route exact path=\"/forgotpasswordverification\" render={props => <ForgotPasswordVerification {...props} auth={authProps} />}/>\n                        <PrivateRoute component={MainTags} exact path=\"/tags\" />\n                        <PrivateRoute component={MainUsers} exact path=\"/users\" />\n                        <PrivateRoute component={ChangePassword} exact path=\"/changepassword\" />\n                        <PrivateRoute component={ChangePasswordConfirm} exact path=\"/changepasswordconfirm\" />\n                        </Suspense>\n                        </Switch>\n                    </Router>\n                </div>\n            )\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\nimport itemReducer from './itemReducer';\n\nexport default combineReducers({\n\titemReducer\n});","export default (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase 'FETCH_ITEMS':\n\t\t\t//console.log(\"Reducer for fetch items\");\n\t\t\t//console.log(action);\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\titems: action.items,\n\t\t\t\ttimeout: action.timeout\n\t\t\t});\n\t\tcase 'TIMEOUT':\n\t\t\t//console.log(\"Timeout while fetching items\");\n\t\t\t//console.log(action);\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\titems: action.items,\n\t\t\t\ttimeout: action.timeout\n\t\t\t});\n\t\tdefault:\n\t\t\treturn state\n\t\t}\n\t}\t","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n//import { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n//import Home from \"./components/Home\";\n//import LogIn from \"./components/auth/LogIn\";\n//import Catalog from \"./components/Catalog\";\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\nimport Amplify from 'aws-amplify';\nimport config from './config';\n\n\nAmplify.configure({\n    Auth: {\n      mandatorySignId: true,\n      region: config.cognito.REGION,\n      userPoolId: config.cognito.USER_POOL_ID,\n      userPoolWebClientId: config.cognito.APP_CLIENT_ID\n    }\n  });\n    // const routing =(\n    \t// {/* <Provider store={configureStore()}>\n\t    //     <Router>\n\t    //         <Route exact path=\"/\" component={Home} />\n\t    //         <Route exact path=\"/login\" component={LogIn} />\n\t    //         <Route exact path=\"/catalog\" component={Catalog} />\n\t    //   \t</Router>\n      // \t</Provider> */}\n    //   );\n    // const routing =(\n\n    //     <Router>\n    //         <Route exact path=\"/\" component={Home} />\n    //         {/* <Route exact path=\"/login\" component={LogIn} /> */}\n    //         <Route exact path=\"/login\" render={(props) => <LogIn {...props} auth={authProps} />} />\n\n\n    //   </Router>\n    //   );\n\nReactDOM.render(<Provider store={configureStore()}><App/></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\nexport default function configureStore(initialState={}) {\n return createStore(\n  rootReducer,\n  initialState,\n   applyMiddleware(thunk)\n );\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport LoadingGif from \"./loading.gif\";\n\nconst LoadingSpinner = styled.img`\n  display: block;\n  margin: 0 auto;\n  width: 100px;\n`;\n\nexport default () => {\n  return <LoadingSpinner src={LoadingGif} />;\n};\n","module.exports = __webpack_public_path__ + \"static/media/loading.8c328009.gif\";"],"sourceRoot":""}